<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /bo4tK/5z/8AK99T7dGv/9k=
</value>
  </data>
</root>